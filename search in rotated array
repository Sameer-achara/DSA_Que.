#include <iostream>
using namespace std;


int binarySearch(int arr[], int start, int end, int key) {
    while (start <= end) {
        int mid = start + (end - start) / 2; 
        if (arr[mid] == key)
            return mid;
        else if (arr[mid] > key)
            end = mid - 1;
        else
            start = mid + 1;
    }
    return -1; 
}


int findPivot(int arr[], int n) {
    int start = 0, end = n - 1;
    while (start < end) {
        int mid = start + (end - start) / 2;
        if (arr[mid] >= arr[0])
            start = mid + 1;
        else
            end = mid;
    }
    return start; 
}


int searchKey(int arr[], int n, int key) {
    int pivot = findPivot(arr, n);

    // Decide which part to search
    if (key >= arr[pivot] && key <= arr[n - 1]) {
        return binarySearch(arr, pivot, n - 1, key);
    } else {
        return binarySearch(arr, 0, pivot - 1, key);
    }
}

int main() {
    int arr[] = {7, 9, 2, 3, 4};
    int n = sizeof(arr) / sizeof(arr[0]);
    int key;

    cout << "Enter the key to search: ";
    cin >> key;

    int index = searchKey(arr, n, key);

    if (index != -1)
        cout << "Key found at index: " << index << endl;
    else
        cout << "Key not found in the array." << endl;

    return 0;
}
